openapi: 3.0.3
info:
  title: 'Tickets Please API Dcumentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/login:
    post:
      summary: Login
      operationId: login
      description: "Authenticates the user and returns the user's API token."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    token: '{YOUR_AUTH_KEY}'
                  message: Authenticated
                  status: 200
                properties:
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: '{YOUR_AUTH_KEY}'
                  message:
                    type: string
                    example: Authenticated
                  status:
                    type: integer
                    example: 200
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: greta83@example.org
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'L~-.D]l15xGKQAK}^'
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: Logout
      operationId: logout
      description: 'Signs out the user and destroys the API token.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - Authentication
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v1/authors:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: user
                      id: 1
                      attributes:
                        name: 'Elmer Terry'
                        email: test@example.com
                        isManager: false
                        emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                        createdAt: '2024-08-08T07:07:45.000000Z'
                        updatedAt: '2024-08-08T07:07:45.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/1'
                    -
                      type: user
                      id: 3
                      attributes:
                        name: 'Mr. Elian Kerluke'
                        email: kuvalis.gracie@example.com
                        isManager: false
                        emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                        createdAt: '2024-08-08T07:07:45.000000Z'
                        updatedAt: '2024-08-08T07:07:45.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/3'
                    -
                      type: user
                      id: 4
                      attributes:
                        name: 'Mr. Llewellyn Hagenes'
                        email: pablo.bahringer@example.net
                        isManager: false
                        emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                        createdAt: '2024-08-08T07:07:45.000000Z'
                        updatedAt: '2024-08-08T07:07:45.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/4'
                    -
                      type: user
                      id: 5
                      attributes:
                        name: 'Jailyn Cassin DDS'
                        email: houston43@example.com
                        isManager: false
                        emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                        createdAt: '2024-08-08T07:07:45.000000Z'
                        updatedAt: '2024-08-08T07:07:45.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/5'
                    -
                      type: user
                      id: 6
                      attributes:
                        name: 'Kavon Boehm'
                        email: lbartell@example.com
                        isManager: false
                        emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                        createdAt: '2024-08-08T07:07:45.000000Z'
                        updatedAt: '2024-08-08T07:07:45.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/6'
                    -
                      type: user
                      id: 7
                      attributes:
                        name: 'Mr. Rupert McDermott'
                        email: jprice@example.com
                        isManager: false
                        emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                        createdAt: '2024-08-08T07:07:45.000000Z'
                        updatedAt: '2024-08-08T07:07:45.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/7'
                    -
                      type: user
                      id: 8
                      attributes:
                        name: 'Yasmeen Schowalter'
                        email: qrunolfsdottir@example.com
                        isManager: false
                        emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                        createdAt: '2024-08-08T07:07:45.000000Z'
                        updatedAt: '2024-08-08T07:07:45.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/8'
                    -
                      type: user
                      id: 9
                      attributes:
                        name: 'Etha Cummerata'
                        email: freddy.heathcote@example.net
                        isManager: false
                        emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                        createdAt: '2024-08-08T07:07:45.000000Z'
                        updatedAt: '2024-08-08T07:07:45.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/9'
                    -
                      type: user
                      id: 10
                      attributes:
                        name: 'Evie Prohaska'
                        email: greinger@example.net
                        isManager: false
                        emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                        createdAt: '2024-08-08T07:07:45.000000Z'
                        updatedAt: '2024-08-08T07:07:45.000000Z'
                      links:
                        self: 'http://localhost/api/v1/authors/10'
                  links:
                    first: 'http://localhost/api/v1/authors?page=1'
                    last: 'http://localhost/api/v1/authors?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/authors'
                    per_page: 15
                    to: 9
                    total: 9
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: user
                        id: 1
                        attributes:
                          name: 'Elmer Terry'
                          email: test@example.com
                          isManager: false
                          emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                          createdAt: '2024-08-08T07:07:45.000000Z'
                          updatedAt: '2024-08-08T07:07:45.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/1'
                      -
                        type: user
                        id: 3
                        attributes:
                          name: 'Mr. Elian Kerluke'
                          email: kuvalis.gracie@example.com
                          isManager: false
                          emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                          createdAt: '2024-08-08T07:07:45.000000Z'
                          updatedAt: '2024-08-08T07:07:45.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/3'
                      -
                        type: user
                        id: 4
                        attributes:
                          name: 'Mr. Llewellyn Hagenes'
                          email: pablo.bahringer@example.net
                          isManager: false
                          emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                          createdAt: '2024-08-08T07:07:45.000000Z'
                          updatedAt: '2024-08-08T07:07:45.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/4'
                      -
                        type: user
                        id: 5
                        attributes:
                          name: 'Jailyn Cassin DDS'
                          email: houston43@example.com
                          isManager: false
                          emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                          createdAt: '2024-08-08T07:07:45.000000Z'
                          updatedAt: '2024-08-08T07:07:45.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/5'
                      -
                        type: user
                        id: 6
                        attributes:
                          name: 'Kavon Boehm'
                          email: lbartell@example.com
                          isManager: false
                          emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                          createdAt: '2024-08-08T07:07:45.000000Z'
                          updatedAt: '2024-08-08T07:07:45.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/6'
                      -
                        type: user
                        id: 7
                        attributes:
                          name: 'Mr. Rupert McDermott'
                          email: jprice@example.com
                          isManager: false
                          emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                          createdAt: '2024-08-08T07:07:45.000000Z'
                          updatedAt: '2024-08-08T07:07:45.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/7'
                      -
                        type: user
                        id: 8
                        attributes:
                          name: 'Yasmeen Schowalter'
                          email: qrunolfsdottir@example.com
                          isManager: false
                          emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                          createdAt: '2024-08-08T07:07:45.000000Z'
                          updatedAt: '2024-08-08T07:07:45.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/8'
                      -
                        type: user
                        id: 9
                        attributes:
                          name: 'Etha Cummerata'
                          email: freddy.heathcote@example.net
                          isManager: false
                          emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                          createdAt: '2024-08-08T07:07:45.000000Z'
                          updatedAt: '2024-08-08T07:07:45.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/9'
                      -
                        type: user
                        id: 10
                        attributes:
                          name: 'Evie Prohaska'
                          email: greinger@example.net
                          isManager: false
                          emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                          createdAt: '2024-08-08T07:07:45.000000Z'
                          updatedAt: '2024-08-08T07:07:45.000000Z'
                        links:
                          self: 'http://localhost/api/v1/authors/10'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: user
                        id:
                          type: integer
                          example: 1
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'Elmer Terry'
                            email:
                              type: string
                              example: test@example.com
                            isManager:
                              type: boolean
                              example: false
                            emailVerifiedAt:
                              type: string
                              example: '2024-08-08T07:07:45.000000Z'
                            createdAt:
                              type: string
                              example: '2024-08-08T07:07:45.000000Z'
                            updatedAt:
                              type: string
                              example: '2024-08-08T07:07:45.000000Z'
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://localhost/api/v1/authors/1'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/authors?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/authors?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/authors'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 9
                      total:
                        type: integer
                        example: 9
      tags:
        - Endpoints
  '/api/v1/authors/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 1
                    attributes:
                      name: 'Elmer Terry'
                      email: test@example.com
                      isManager: false
                      emailVerifiedAt: '2024-08-08T07:07:45.000000Z'
                      createdAt: '2024-08-08T07:07:45.000000Z'
                      updatedAt: '2024-08-08T07:07:45.000000Z'
                    links:
                      self: 'http://localhost/api/v1/authors/1'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Elmer Terry'
                          email:
                            type: string
                            example: test@example.com
                          isManager:
                            type: boolean
                            example: false
                          emailVerifiedAt:
                            type: string
                            example: '2024-08-08T07:07:45.000000Z'
                          createdAt:
                            type: string
                            example: '2024-08-08T07:07:45.000000Z'
                          updatedAt:
                            type: string
                            example: '2024-08-08T07:07:45.000000Z'
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost/api/v1/authors/1'
      tags:
        - Endpoints
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the author.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/authors/{author_id}/tickets':
    get:
      summary: ''
      operationId: getApiV1AuthorsAuthor_idTickets
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: 'http://localhost/api/v1/authors/ipsa/tickets?page=1'
                    last: 'http://localhost/api/v1/authors/ipsa/tickets?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors/ipsa/tickets?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/authors/ipsa/tickets'
                    per_page: 15
                    to: null
                    total: 0
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/authors/ipsa/tickets?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/authors/ipsa/tickets?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors/ipsa/tickets?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/authors/ipsa/tickets'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - Endpoints
    post:
      summary: ''
      operationId: postApiV1AuthorsAuthor_idTickets
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: ''
                          example: soluta
                        description:
                          type: string
                          description: ''
                          example: 'Nam magni consequatur doloremque maiores quas iste veniam.'
                        status:
                          type: string
                          description: ''
                          example: H
                          enum:
                            - A
                            - C
                            - H
                            - X
                author:
                  type: integer
                  description: 'Must be 1.'
                  example: '1'
              required:
                - data
                - author
    parameters:
      -
        in: path
        name: author_id
        description: 'The ID of the author.'
        example: ipsa
        required: true
        schema:
          type: string
  '/api/v1/authors/{author_id}/tickets/{id}':
    delete:
      summary: ''
      operationId: deleteApiV1AuthorsAuthor_idTicketsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: author_id
        description: 'The ID of the author.'
        example: officia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/authors/{author}/tickets/{ticket}':
    put:
      summary: ''
      operationId: putApiV1AuthorsAuthorTicketsTicket
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: ''
                          example: ut
                        description:
                          type: string
                          description: ''
                          example: 'Architecto repellendus repellat id laudantium.'
                        status:
                          type: string
                          description: ''
                          example: A
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 15
    patch:
      summary: ''
      operationId: patchApiV1AuthorsAuthorTicketsTicket
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: ''
                          example: et
                        description:
                          type: string
                          description: ''
                          example: 'Eius modi laboriosam repudiandae accusantium eum.'
                        status:
                          type: string
                          description: ''
                          example: A
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              properties:
                                id:
                                  type: string
                                  description: ''
                                  example: null
    parameters:
      -
        in: path
        name: author
        description: 'The author.'
        example: amet
        required: true
        schema:
          type: string
      -
        in: path
        name: ticket
        description: 'The ticket.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/users:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: user
                      id: 1
                      attributes:
                        name: 'Elmer Terry'
                        email: test@example.com
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/1'
                    -
                      type: user
                      id: 3
                      attributes:
                        name: 'Mr. Elian Kerluke'
                        email: kuvalis.gracie@example.com
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/3'
                    -
                      type: user
                      id: 4
                      attributes:
                        name: 'Mr. Llewellyn Hagenes'
                        email: pablo.bahringer@example.net
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/4'
                    -
                      type: user
                      id: 5
                      attributes:
                        name: 'Jailyn Cassin DDS'
                        email: houston43@example.com
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/5'
                    -
                      type: user
                      id: 6
                      attributes:
                        name: 'Kavon Boehm'
                        email: lbartell@example.com
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/6'
                    -
                      type: user
                      id: 7
                      attributes:
                        name: 'Mr. Rupert McDermott'
                        email: jprice@example.com
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/7'
                    -
                      type: user
                      id: 8
                      attributes:
                        name: 'Yasmeen Schowalter'
                        email: qrunolfsdottir@example.com
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/8'
                    -
                      type: user
                      id: 9
                      attributes:
                        name: 'Etha Cummerata'
                        email: freddy.heathcote@example.net
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/9'
                    -
                      type: user
                      id: 10
                      attributes:
                        name: 'Evie Prohaska'
                        email: greinger@example.net
                        isManager: false
                      links:
                        self: 'http://localhost/api/v1/authors/10'
                  links:
                    first: 'http://localhost/api/v1/users?page=1'
                    last: 'http://localhost/api/v1/users?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/users?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/users'
                    per_page: 15
                    to: 9
                    total: 9
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: user
                        id: 1
                        attributes:
                          name: 'Elmer Terry'
                          email: test@example.com
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/1'
                      -
                        type: user
                        id: 3
                        attributes:
                          name: 'Mr. Elian Kerluke'
                          email: kuvalis.gracie@example.com
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/3'
                      -
                        type: user
                        id: 4
                        attributes:
                          name: 'Mr. Llewellyn Hagenes'
                          email: pablo.bahringer@example.net
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/4'
                      -
                        type: user
                        id: 5
                        attributes:
                          name: 'Jailyn Cassin DDS'
                          email: houston43@example.com
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/5'
                      -
                        type: user
                        id: 6
                        attributes:
                          name: 'Kavon Boehm'
                          email: lbartell@example.com
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/6'
                      -
                        type: user
                        id: 7
                        attributes:
                          name: 'Mr. Rupert McDermott'
                          email: jprice@example.com
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/7'
                      -
                        type: user
                        id: 8
                        attributes:
                          name: 'Yasmeen Schowalter'
                          email: qrunolfsdottir@example.com
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/8'
                      -
                        type: user
                        id: 9
                        attributes:
                          name: 'Etha Cummerata'
                          email: freddy.heathcote@example.net
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/9'
                      -
                        type: user
                        id: 10
                        attributes:
                          name: 'Evie Prohaska'
                          email: greinger@example.net
                          isManager: false
                        links:
                          self: 'http://localhost/api/v1/authors/10'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: user
                        id:
                          type: integer
                          example: 1
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'Elmer Terry'
                            email:
                              type: string
                              example: test@example.com
                            isManager:
                              type: boolean
                              example: false
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://localhost/api/v1/authors/1'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/users?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/users?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/users?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/users'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 9
                      total:
                        type: integer
                        example: 9
      tags:
        - Endpoints
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        name:
                          type: string
                          description: ''
                          example: quis
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: rsimonis@example.org
                        password:
                          type: string
                          description: ''
                          example: 'w7F\"b%b"/tu)k;Z:ts'
                        isManager:
                          type: boolean
                          description: ''
                          example: true
  '/api/v1/users/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 1
                    attributes:
                      name: 'Elmer Terry'
                      email: test@example.com
                      isManager: false
                    links:
                      self: 'http://localhost/api/v1/authors/1'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Elmer Terry'
                          email:
                            type: string
                            example: test@example.com
                          isManager:
                            type: boolean
                            example: false
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost/api/v1/authors/1'
      tags:
        - Endpoints
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/users/{user}':
    put:
      summary: 'Replace the specified resource in storage. (PUT request method)'
      operationId: replaceTheSpecifiedResourceInStoragePUTRequestMethod
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        name:
                          type: string
                          description: ''
                          example: molestias
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: tatyana18@example.com
                        password:
                          type: string
                          description: ''
                          example: \zMIbVh;wM
                        isManager:
                          type: boolean
                          description: ''
                          example: true
    patch:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        name:
                          type: string
                          description: ''
                          example: vel
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: orn.adelia@example.com
                        password:
                          type: string
                          description: ''
                          example: '>;4b(FLEBXMDFmffVq'
                        isManager:
                          type: boolean
                          description: ''
                          example: true
    parameters:
      -
        in: path
        name: user
        description: 'The user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v2/tickets:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 100
                    user_id: 4
                    title: labore
                    description: 'Accusamus pariatur non cum dicta. Et cupiditate qui occaecati amet rerum nam. Sint in qui qui non. Dolor qui nobis et voluptatibus consectetur et. Eligendi quo provident temporibus et mollitia occaecati.'
                    status: H
                    created_at: '2024-08-08T07:07:46.000000Z'
                    updated_at: '2024-08-08T07:07:46.000000Z'
                  -
                    id: 98
                    user_id: 1
                    title: odit
                    description: 'Eos sint necessitatibus ullam corporis facere ut. Amet repudiandae voluptate quos illum mollitia reprehenderit neque. Necessitatibus et tempora qui. Illo reprehenderit ipsam consectetur ex et rerum.'
                    status: A
                    created_at: '2024-08-08T07:07:46.000000Z'
                    updated_at: '2024-08-08T07:07:46.000000Z'
                  -
                    id: 97
                    user_id: 6
                    title: eos
                    description: 'Velit qui ut ratione vero architecto voluptatem. Perferendis aliquid pariatur sit dicta. Iusto eligendi sequi iure non velit. Adipisci modi suscipit mollitia eos nam omnis non.'
                    status: X
                    created_at: '2024-08-08T07:07:46.000000Z'
                    updated_at: '2024-08-08T07:07:46.000000Z'
      tags:
        - Endpoints
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/tickets/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Endpoints
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/tickets:
    get:
      summary: 'Get all tickets'
      operationId: getAllTickets
      description: ''
      parameters:
        -
          in: query
          name: sort
          description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
          example: 'sort=title,-createdAt'
          required: false
          schema:
            type: string
            description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
            example: 'sort=title,-createdAt'
        -
          in: query
          name: 'filter[status]'
          description: 'Filter by status code: A, C, H, X.'
          example: null
          required: false
          schema:
            type: string
            description: 'Filter by status code: A, C, H, X.'
            example: null
        -
          in: query
          name: 'filter[title]'
          description: 'Filter by title. Wildcards are supported.'
          example: '*fix*'
          required: false
          schema:
            type: string
            description: 'Filter by title. Wildcards are supported.'
            example: '*fix*'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: ticket
                      id: 63
                      attributes:
                        title: ipsa
                        description: 'Iste iste quisquam ut pariatur neque. Quia aut velit culpa sit earum consequatur eius. Sed reiciendis sapiente quia.'
                        status: C
                        createdAt: '2024-08-08T07:07:46.000000Z'
                        updatedAt: '2024-08-08T07:07:46.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 7
                          links:
                            self: 'http://localhost/api/v1/authors/7'
                      links:
                        self: 'http://localhost/api/v1/tickets/63'
                    -
                      type: ticket
                      id: 76
                      attributes:
                        title: nemo
                        description: 'Laudantium at numquam sed quisquam deserunt. Expedita quaerat et aperiam est. Velit quas voluptatem eum hic nobis reprehenderit. Eaque ipsam incidunt illum quidem exercitationem vel aut.'
                        status: C
                        createdAt: '2024-08-08T07:07:46.000000Z'
                        updatedAt: '2024-08-08T07:07:46.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 8
                          links:
                            self: 'http://localhost/api/v1/authors/8'
                      links:
                        self: 'http://localhost/api/v1/tickets/76'
                    -
                      type: ticket
                      id: 74
                      attributes:
                        title: est
                        description: 'Dicta cumque consequatur consequuntur ex est. Quia accusantium maxime autem inventore consectetur sint doloremque. Voluptas cum quia inventore facere perspiciatis.'
                        status: A
                        createdAt: '2024-08-08T07:07:46.000000Z'
                        updatedAt: '2024-08-08T07:07:46.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 8
                          links:
                            self: 'http://localhost/api/v1/authors/8'
                      links:
                        self: 'http://localhost/api/v1/tickets/74'
                    -
                      type: ticket
                      id: 73
                      attributes:
                        title: vel
                        description: 'Vitae explicabo et quis asperiores. Vitae id eaque neque dicta exercitationem. Atque fugiat enim eligendi cum autem sint error.'
                        status: C
                        createdAt: '2024-08-08T07:07:46.000000Z'
                        updatedAt: '2024-08-08T07:07:46.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 8
                          links:
                            self: 'http://localhost/api/v1/authors/8'
                      links:
                        self: 'http://localhost/api/v1/tickets/73'
                    -
                      type: ticket
                      id: 72
                      attributes:
                        title: non
                        description: 'Quam quos et ullam ea voluptates voluptas voluptas molestias. Occaecati nihil asperiores vel minus et cumque et. Non dolor tempora facere aliquid nihil quia dicta. Aut laudantium velit enim at sequi architecto praesentium.'
                        status: H
                        createdAt: '2024-08-08T07:07:46.000000Z'
                        updatedAt: '2024-08-08T07:07:46.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 4
                          links:
                            self: 'http://localhost/api/v1/authors/4'
                      links:
                        self: 'http://localhost/api/v1/tickets/72'
                    -
                      type: ticket
                      id: 71
                      attributes:
                        title: totam
                        description: 'Aut aut ut explicabo quisquam aut est optio dolorum. Impedit dolor sit eum. Enim ut minima in facilis assumenda autem.'
                        status: H
                        createdAt: '2024-08-08T07:07:46.000000Z'
                        updatedAt: '2024-08-08T07:07:46.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 8
                          links:
                            self: 'http://localhost/api/v1/authors/8'
                      links:
                        self: 'http://localhost/api/v1/tickets/71'
                    -
                      type: ticket
                      id: 70
                      attributes:
                        title: sit
                        description: 'Molestiae debitis est facere sed cupiditate asperiores distinctio. Voluptas ut maxime ut est. In atque odit fugiat omnis voluptate molestias rerum.'
                        status: X
                        createdAt: '2024-08-08T07:07:46.000000Z'
                        updatedAt: '2024-08-08T07:07:46.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/70'
                    -
                      type: ticket
                      id: 68
                      attributes:
                        title: eaque
                        description: 'Dignissimos tempora non iste qui molestias natus. Autem reiciendis iusto ea. Non reprehenderit explicabo excepturi.'
                        status: C
                        createdAt: '2024-08-08T07:07:46.000000Z'
                        updatedAt: '2024-08-08T07:07:46.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 10
                          links:
                            self: 'http://localhost/api/v1/authors/10'
                      links:
                        self: 'http://localhost/api/v1/tickets/68'
                    -
                      type: ticket
                      id: 67
                      attributes:
                        title: molestias
                        description: 'Et fugit quia voluptatum et voluptas. Exercitationem adipisci quisquam illo aut et. Et similique optio ullam et excepturi sit nemo. Inventore vero natus autem distinctio itaque.'
                        status: H
                        createdAt: '2024-08-08T07:07:46.000000Z'
                        updatedAt: '2024-08-08T07:07:46.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 9
                          links:
                            self: 'http://localhost/api/v1/authors/9'
                      links:
                        self: 'http://localhost/api/v1/tickets/67'
                    -
                      type: ticket
                      id: 65
                      attributes:
                        title: aliquam
                        description: 'Illum eos molestiae soluta neque est et deleniti. Occaecati placeat beatae minus dolorem voluptas quam ut dolorem. Deleniti et minus facere odit tempora ut. Saepe alias corporis nihil.'
                        status: C
                        createdAt: '2024-08-08T07:07:46.000000Z'
                        updatedAt: '2024-08-08T07:07:46.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 7
                          links:
                            self: 'http://localhost/api/v1/authors/7'
                      links:
                        self: 'http://localhost/api/v1/tickets/65'
                    -
                      type: ticket
                      id: 64
                      attributes:
                        title: est
                        description: 'Sapiente odit nihil molestiae quos sint eos. Facere qui et omnis vitae temporibus. Sunt amet omnis saepe animi. Quas omnis necessitatibus dolor quisquam impedit molestiae corrupti.'
                        status: A
                        createdAt: '2024-08-08T07:07:46.000000Z'
                        updatedAt: '2024-08-08T07:07:46.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 4
                          links:
                            self: 'http://localhost/api/v1/authors/4'
                      links:
                        self: 'http://localhost/api/v1/tickets/64'
                    -
                      type: ticket
                      id: 53
                      attributes:
                        title: tenetur
                        description: 'Sint ducimus ipsa quos incidunt suscipit. Eum consequuntur optio in exercitationem delectus libero. Vero vero dolores veritatis nisi minus ut ut ut.'
                        status: H
                        createdAt: '2024-08-08T07:07:46.000000Z'
                        updatedAt: '2024-08-08T07:07:46.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 7
                          links:
                            self: 'http://localhost/api/v1/authors/7'
                      links:
                        self: 'http://localhost/api/v1/tickets/53'
                    -
                      type: ticket
                      id: 55
                      attributes:
                        title: quis
                        description: 'Et ea officiis dicta consequatur qui aut veritatis. Tenetur nemo dolores dolor cupiditate.'
                        status: X
                        createdAt: '2024-08-08T07:07:46.000000Z'
                        updatedAt: '2024-08-08T07:07:46.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 10
                          links:
                            self: 'http://localhost/api/v1/authors/10'
                      links:
                        self: 'http://localhost/api/v1/tickets/55'
                    -
                      type: ticket
                      id: 54
                      attributes:
                        title: est
                        description: 'Sunt sunt et provident ipsum cumque est. Quo facilis dolorum ea labore aspernatur possimus facere deserunt. Nobis recusandae quae est. Qui ab maiores aperiam qui.'
                        status: A
                        createdAt: '2024-08-08T07:07:46.000000Z'
                        updatedAt: '2024-08-08T07:07:46.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 5
                          links:
                            self: 'http://localhost/api/v1/authors/5'
                      links:
                        self: 'http://localhost/api/v1/tickets/54'
                    -
                      type: ticket
                      id: 56
                      attributes:
                        title: culpa
                        description: 'Vel repudiandae minus nulla dignissimos at voluptas. Aliquid veniam ea distinctio. Ut nobis deserunt quis placeat. Eum et voluptatum voluptas alias incidunt voluptatem.'
                        status: A
                        createdAt: '2024-08-08T07:07:46.000000Z'
                        updatedAt: '2024-08-08T07:07:46.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                      links:
                        self: 'http://localhost/api/v1/tickets/56'
                  links:
                    first: 'http://localhost/api/v1/tickets?page=1'
                    last: 'http://localhost/api/v1/tickets?page=6'
                    prev: null
                    next: 'http://localhost/api/v1/tickets?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 6
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://localhost/api/v1/tickets?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=4'
                        label: '4'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=5'
                        label: '5'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=6'
                        label: '6'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/tickets'
                    per_page: 15
                    to: 15
                    total: 87
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: ticket
                        id: 63
                        attributes:
                          title: ipsa
                          description: 'Iste iste quisquam ut pariatur neque. Quia aut velit culpa sit earum consequatur eius. Sed reiciendis sapiente quia.'
                          status: C
                          createdAt: '2024-08-08T07:07:46.000000Z'
                          updatedAt: '2024-08-08T07:07:46.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 7
                            links:
                              self: 'http://localhost/api/v1/authors/7'
                        links:
                          self: 'http://localhost/api/v1/tickets/63'
                      -
                        type: ticket
                        id: 76
                        attributes:
                          title: nemo
                          description: 'Laudantium at numquam sed quisquam deserunt. Expedita quaerat et aperiam est. Velit quas voluptatem eum hic nobis reprehenderit. Eaque ipsam incidunt illum quidem exercitationem vel aut.'
                          status: C
                          createdAt: '2024-08-08T07:07:46.000000Z'
                          updatedAt: '2024-08-08T07:07:46.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 8
                            links:
                              self: 'http://localhost/api/v1/authors/8'
                        links:
                          self: 'http://localhost/api/v1/tickets/76'
                      -
                        type: ticket
                        id: 74
                        attributes:
                          title: est
                          description: 'Dicta cumque consequatur consequuntur ex est. Quia accusantium maxime autem inventore consectetur sint doloremque. Voluptas cum quia inventore facere perspiciatis.'
                          status: A
                          createdAt: '2024-08-08T07:07:46.000000Z'
                          updatedAt: '2024-08-08T07:07:46.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 8
                            links:
                              self: 'http://localhost/api/v1/authors/8'
                        links:
                          self: 'http://localhost/api/v1/tickets/74'
                      -
                        type: ticket
                        id: 73
                        attributes:
                          title: vel
                          description: 'Vitae explicabo et quis asperiores. Vitae id eaque neque dicta exercitationem. Atque fugiat enim eligendi cum autem sint error.'
                          status: C
                          createdAt: '2024-08-08T07:07:46.000000Z'
                          updatedAt: '2024-08-08T07:07:46.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 8
                            links:
                              self: 'http://localhost/api/v1/authors/8'
                        links:
                          self: 'http://localhost/api/v1/tickets/73'
                      -
                        type: ticket
                        id: 72
                        attributes:
                          title: non
                          description: 'Quam quos et ullam ea voluptates voluptas voluptas molestias. Occaecati nihil asperiores vel minus et cumque et. Non dolor tempora facere aliquid nihil quia dicta. Aut laudantium velit enim at sequi architecto praesentium.'
                          status: H
                          createdAt: '2024-08-08T07:07:46.000000Z'
                          updatedAt: '2024-08-08T07:07:46.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 4
                            links:
                              self: 'http://localhost/api/v1/authors/4'
                        links:
                          self: 'http://localhost/api/v1/tickets/72'
                      -
                        type: ticket
                        id: 71
                        attributes:
                          title: totam
                          description: 'Aut aut ut explicabo quisquam aut est optio dolorum. Impedit dolor sit eum. Enim ut minima in facilis assumenda autem.'
                          status: H
                          createdAt: '2024-08-08T07:07:46.000000Z'
                          updatedAt: '2024-08-08T07:07:46.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 8
                            links:
                              self: 'http://localhost/api/v1/authors/8'
                        links:
                          self: 'http://localhost/api/v1/tickets/71'
                      -
                        type: ticket
                        id: 70
                        attributes:
                          title: sit
                          description: 'Molestiae debitis est facere sed cupiditate asperiores distinctio. Voluptas ut maxime ut est. In atque odit fugiat omnis voluptate molestias rerum.'
                          status: X
                          createdAt: '2024-08-08T07:07:46.000000Z'
                          updatedAt: '2024-08-08T07:07:46.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/70'
                      -
                        type: ticket
                        id: 68
                        attributes:
                          title: eaque
                          description: 'Dignissimos tempora non iste qui molestias natus. Autem reiciendis iusto ea. Non reprehenderit explicabo excepturi.'
                          status: C
                          createdAt: '2024-08-08T07:07:46.000000Z'
                          updatedAt: '2024-08-08T07:07:46.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 10
                            links:
                              self: 'http://localhost/api/v1/authors/10'
                        links:
                          self: 'http://localhost/api/v1/tickets/68'
                      -
                        type: ticket
                        id: 67
                        attributes:
                          title: molestias
                          description: 'Et fugit quia voluptatum et voluptas. Exercitationem adipisci quisquam illo aut et. Et similique optio ullam et excepturi sit nemo. Inventore vero natus autem distinctio itaque.'
                          status: H
                          createdAt: '2024-08-08T07:07:46.000000Z'
                          updatedAt: '2024-08-08T07:07:46.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 9
                            links:
                              self: 'http://localhost/api/v1/authors/9'
                        links:
                          self: 'http://localhost/api/v1/tickets/67'
                      -
                        type: ticket
                        id: 65
                        attributes:
                          title: aliquam
                          description: 'Illum eos molestiae soluta neque est et deleniti. Occaecati placeat beatae minus dolorem voluptas quam ut dolorem. Deleniti et minus facere odit tempora ut. Saepe alias corporis nihil.'
                          status: C
                          createdAt: '2024-08-08T07:07:46.000000Z'
                          updatedAt: '2024-08-08T07:07:46.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 7
                            links:
                              self: 'http://localhost/api/v1/authors/7'
                        links:
                          self: 'http://localhost/api/v1/tickets/65'
                      -
                        type: ticket
                        id: 64
                        attributes:
                          title: est
                          description: 'Sapiente odit nihil molestiae quos sint eos. Facere qui et omnis vitae temporibus. Sunt amet omnis saepe animi. Quas omnis necessitatibus dolor quisquam impedit molestiae corrupti.'
                          status: A
                          createdAt: '2024-08-08T07:07:46.000000Z'
                          updatedAt: '2024-08-08T07:07:46.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 4
                            links:
                              self: 'http://localhost/api/v1/authors/4'
                        links:
                          self: 'http://localhost/api/v1/tickets/64'
                      -
                        type: ticket
                        id: 53
                        attributes:
                          title: tenetur
                          description: 'Sint ducimus ipsa quos incidunt suscipit. Eum consequuntur optio in exercitationem delectus libero. Vero vero dolores veritatis nisi minus ut ut ut.'
                          status: H
                          createdAt: '2024-08-08T07:07:46.000000Z'
                          updatedAt: '2024-08-08T07:07:46.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 7
                            links:
                              self: 'http://localhost/api/v1/authors/7'
                        links:
                          self: 'http://localhost/api/v1/tickets/53'
                      -
                        type: ticket
                        id: 55
                        attributes:
                          title: quis
                          description: 'Et ea officiis dicta consequatur qui aut veritatis. Tenetur nemo dolores dolor cupiditate.'
                          status: X
                          createdAt: '2024-08-08T07:07:46.000000Z'
                          updatedAt: '2024-08-08T07:07:46.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 10
                            links:
                              self: 'http://localhost/api/v1/authors/10'
                        links:
                          self: 'http://localhost/api/v1/tickets/55'
                      -
                        type: ticket
                        id: 54
                        attributes:
                          title: est
                          description: 'Sunt sunt et provident ipsum cumque est. Quo facilis dolorum ea labore aspernatur possimus facere deserunt. Nobis recusandae quae est. Qui ab maiores aperiam qui.'
                          status: A
                          createdAt: '2024-08-08T07:07:46.000000Z'
                          updatedAt: '2024-08-08T07:07:46.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 5
                            links:
                              self: 'http://localhost/api/v1/authors/5'
                        links:
                          self: 'http://localhost/api/v1/tickets/54'
                      -
                        type: ticket
                        id: 56
                        attributes:
                          title: culpa
                          description: 'Vel repudiandae minus nulla dignissimos at voluptas. Aliquid veniam ea distinctio. Ut nobis deserunt quis placeat. Eum et voluptatum voluptas alias incidunt voluptatem.'
                          status: A
                          createdAt: '2024-08-08T07:07:46.000000Z'
                          updatedAt: '2024-08-08T07:07:46.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                        links:
                          self: 'http://localhost/api/v1/tickets/56'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: ticket
                        id:
                          type: integer
                          example: 63
                        attributes:
                          type: object
                          properties:
                            title:
                              type: string
                              example: ipsa
                            description:
                              type: string
                              example: 'Iste iste quisquam ut pariatur neque. Quia aut velit culpa sit earum consequatur eius. Sed reiciendis sapiente quia.'
                            status:
                              type: string
                              example: C
                            createdAt:
                              type: string
                              example: '2024-08-08T07:07:46.000000Z'
                            updatedAt:
                              type: string
                              example: '2024-08-08T07:07:46.000000Z'
                        relationships:
                          type: object
                          properties:
                            author:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: user
                                    id:
                                      type: integer
                                      example: 7
                                links:
                                  type: object
                                  properties:
                                    self:
                                      type: string
                                      example: 'http://localhost/api/v1/authors/7'
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://localhost/api/v1/tickets/63'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/tickets?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/tickets?page=6'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://localhost/api/v1/tickets?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 6
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://localhost/api/v1/tickets?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=4'
                            label: '4'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=5'
                            label: '5'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=6'
                            label: '6'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/tickets'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 15
                      total:
                        type: integer
                        example: 87
      tags:
        - 'Managing Tickets'
    post:
      summary: 'Create a ticket'
      operationId: createATicket
      description: 'Creates a new ticket record. Users can only create tickets for themselves. Managers can create tickets for any user.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: ticket
                    id: 107
                    attributes:
                      title: asdfasdfasdfasdfasdfsadf
                      description: 'test ticket'
                      status: A
                      createdAt: '2024-03-26T04:40:48.000000Z'
                      updatedAt: '2024-03-26T04:40:48.000000Z'
                    relationships:
                      author:
                        data:
                          type: user
                          id: 1
                        links:
                          self: 'http://localhost:8000/api/v1/authors/1'
                    links:
                      self: 'http://localhost:8000/api/v1/tickets/107'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: ticket
                      id:
                        type: integer
                        example: 107
                      attributes:
                        type: object
                        properties:
                          title:
                            type: string
                            example: asdfasdfasdfasdfasdfsadf
                          description:
                            type: string
                            example: 'test ticket'
                          status:
                            type: string
                            example: A
                          createdAt:
                            type: string
                            example: '2024-03-26T04:40:48.000000Z'
                          updatedAt:
                            type: string
                            example: '2024-03-26T04:40:48.000000Z'
                      relationships:
                        type: object
                        properties:
                          author:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: user
                                  id:
                                    type: integer
                                    example: 1
                              links:
                                type: object
                                properties:
                                  self:
                                    type: string
                                    example: 'http://localhost:8000/api/v1/authors/1'
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost:8000/api/v1/tickets/107'
      tags:
        - 'Managing Tickets'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: ''
                          example: et
                        description:
                          type: string
                          description: ''
                          example: 'Quisquam perspiciatis ratione assumenda neque nostrum ut.'
                        status:
                          type: string
                          description: ''
                          example: H
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              properties:
                                id:
                                  type: integer
                                  description: 'Must be 1.'
                                  example: '1'
              required:
                - data
  '/api/v1/tickets/{id}':
    get:
      summary: 'Show a specific ticket.'
      operationId: showASpecificTicket
      description: 'Display an individual ticket.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: ticket
                    id: 1
                    attributes:
                      title: ex
                      description: 'Eum qui eos dolores similique iure maiores asperiores nam. Sint beatae laborum molestias iste. Autem qui sunt sunt molestiae sed est id. Nihil harum vero consectetur eligendi id est.'
                      status: X
                      createdAt: '2024-08-08T07:07:45.000000Z'
                      updatedAt: '2024-08-08T07:07:45.000000Z'
                    relationships:
                      author:
                        data:
                          type: user
                          id: 8
                        links:
                          self: 'http://localhost/api/v1/authors/8'
                    links:
                      self: 'http://localhost/api/v1/tickets/1'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: ticket
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          title:
                            type: string
                            example: ex
                          description:
                            type: string
                            example: 'Eum qui eos dolores similique iure maiores asperiores nam. Sint beatae laborum molestias iste. Autem qui sunt sunt molestiae sed est id. Nihil harum vero consectetur eligendi id est.'
                          status:
                            type: string
                            example: X
                          createdAt:
                            type: string
                            example: '2024-08-08T07:07:45.000000Z'
                          updatedAt:
                            type: string
                            example: '2024-08-08T07:07:45.000000Z'
                      relationships:
                        type: object
                        properties:
                          author:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: user
                                  id:
                                    type: integer
                                    example: 8
                              links:
                                type: object
                                properties:
                                  self:
                                    type: string
                                    example: 'http://localhost/api/v1/authors/8'
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost/api/v1/tickets/1'
      tags:
        - 'Managing Tickets'
    delete:
      summary: 'Delete ticket.'
      operationId: deleteTicket
      description: 'Remove the specified resource from storage.'
      parameters: []
      responses: {  }
      tags:
        - 'Managing Tickets'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/tickets/{ticket_id}':
    put:
      summary: 'Replace Ticket'
      operationId: replaceTicket
      description: 'Replace the specified ticket in storage.'
      parameters: []
      responses: {  }
      tags:
        - 'Managing Tickets'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: ''
                          example: illo
                        description:
                          type: string
                          description: ''
                          example: 'Voluptatibus quae aut quisquam aut natus ad unde distinctio.'
                        status:
                          type: string
                          description: ''
                          example: X
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 12
    patch:
      summary: 'Update Ticket'
      operationId: updateTicket
      description: 'Update the specified ticket in storage.'
      parameters: []
      responses: {  }
      tags:
        - 'Managing Tickets'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: ''
                          example: nostrum
                        description:
                          type: string
                          description: ''
                          example: 'Vel tempora aspernatur ut non quas.'
                        status:
                          type: string
                          description: ''
                          example: H
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              properties:
                                id:
                                  type: string
                                  description: ''
                                  example: null
    parameters:
      -
        in: path
        name: ticket_id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: 'Managing Tickets'
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
